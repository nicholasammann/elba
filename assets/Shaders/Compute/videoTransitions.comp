#version 430
layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2D img_input;
layout(rgba32f, binding = 1) uniform image2D img_output;
layout(rgba32f, binding = 3) uniform image2D transition_texture;

const float offset = 1.0f;
const float softness = 0.5f;

uniform float transitionAmount;
uniform int transitionMode;

void main()
{
  // get index in global work group, i.e. x,y position
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);

  // load pixel from real time display
  vec3 pixel = vec3(imageLoad(img_input, pixel_coords));

  // load pixel from transition texture
  vec3 transitionPixel = vec3(imageLoad(transition_texture, pixel_coords));

  // transition type A (wipe left to right?)
  if (transitionMode == 0)
  {
    vec3 inputPixel = vec3(imageLoad(img_input, pixel_coords));

    float luma = transitionPixel.x;
    float t = mix(0.0, 1 + softness, transitionAmount);
    
    vec3 color = vec3(0.0);
    if(luma <= t - softness)
    {
      color = transitionPixel;
    }
    else if(luma >= t)
    {
      color = inputPixel;
    }
    else
    {
      float alpha = (t - luma) / softness;
      color = mix(inputPixel, transitionPixel, alpha);
    }
  }
  // transition type B (fade from 1 to the other?)
  else if (transitionMode == 1)
  {
    
  }
  // transition type C (undecided?)
  else if (transitionMode == 2)
  {
    
  }

  // output to a specific pixel in the image
  imageStore(img_output, pixel_coords, vec4(color, 1.0));
}

#version 430
layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2D img_input;
layout(rgba32f, binding = 1) uniform image2D img_output;

const float offset = 1.0f;

const int lineWidth = 3;
const int patternWidth = 431;
const int minPatternWidth = 123;

void main()
{
  // get index in global work group, i.e. x,y position
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);

  vec3 pixel = vec3(imageLoad(img_input, pixel_coords));

  float xCoord = pixel_coords.x;

  float tempPatternWidth = max(300.0 * float(patternWidth) / xCoord, minPatternWidth);

  while (xCoord > tempPatternWidth)
  {
    xCoord -= tempPatternWidth;
  }

  float exponent = min(tempPatternWidth - xCoord, 5.0);

  float closestBand = pow(2, exponent);

  while (closestBand < xCoord)
  {
    closestBand = 2 * closestBand;
  }

  float range = min(closestBand - int(xCoord), lineWidth);

  vec3 lineColor = vec3((0.3 * pixel_coords.x / xCoord * range / lineWidth) * (lineWidth - range) / lineWidth);

  vec3 col = pixel + lineColor;

  // output to a specific pixel in the image
  imageStore(img_output, pixel_coords, vec4(col, 1.0));
}
